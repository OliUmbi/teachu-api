/*
 * This file is generated by jOOQ.
 */
package ch.teachu.teachuapi.generated;


import ch.teachu.teachuapi.generated.tables.*;
import ch.teachu.teachuapi.generated.tables.records.*;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>teachu</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ChatRecord> KEY_CHAT_PRIMARY = UniqueKeys0.KEY_CHAT_PRIMARY;
    public static final UniqueKey<ChatMessageRecord> KEY_CHAT_MESSAGE_PRIMARY = UniqueKeys0.KEY_CHAT_MESSAGE_PRIMARY;
    public static final UniqueKey<ExamRecord> KEY_EXAM_PRIMARY = UniqueKeys0.KEY_EXAM_PRIMARY;
    public static final UniqueKey<GradeRecord> KEY_GRADE_PRIMARY = UniqueKeys0.KEY_GRADE_PRIMARY;
    public static final UniqueKey<LessonRecord> KEY_LESSON_PRIMARY = UniqueKeys0.KEY_LESSON_PRIMARY;
    public static final UniqueKey<LessonEventRecord> KEY_LESSON_EVENT_PRIMARY = UniqueKeys0.KEY_LESSON_EVENT_PRIMARY;
    public static final UniqueKey<LogRecord> KEY_LOG_PRIMARY = UniqueKeys0.KEY_LOG_PRIMARY;
    public static final UniqueKey<RoomRecord> KEY_ROOM_PRIMARY = UniqueKeys0.KEY_ROOM_PRIMARY;
    public static final UniqueKey<SchoolClassRecord> KEY_SCHOOL_CLASS_PRIMARY = UniqueKeys0.KEY_SCHOOL_CLASS_PRIMARY;
    public static final UniqueKey<SchoolClassEventRecord> KEY_SCHOOL_CLASS_EVENT_PRIMARY = UniqueKeys0.KEY_SCHOOL_CLASS_EVENT_PRIMARY;
    public static final UniqueKey<SchoolClassSubjectRecord> KEY_SCHOOL_CLASS_SUBJECT_PRIMARY = UniqueKeys0.KEY_SCHOOL_CLASS_SUBJECT_PRIMARY;
    public static final UniqueKey<SchoolEventRecord> KEY_SCHOOL_EVENT_PRIMARY = UniqueKeys0.KEY_SCHOOL_EVENT_PRIMARY;
    public static final UniqueKey<SchoolInfoRecord> KEY_SCHOOL_INFO_PRIMARY = UniqueKeys0.KEY_SCHOOL_INFO_PRIMARY;
    public static final UniqueKey<SubjectRecord> KEY_SUBJECT_PRIMARY = UniqueKeys0.KEY_SUBJECT_PRIMARY;
    public static final UniqueKey<TimetableRecord> KEY_TIMETABLE_PRIMARY = UniqueKeys0.KEY_TIMETABLE_PRIMARY;
    public static final UniqueKey<TokenRecord> KEY_TOKEN_PRIMARY = UniqueKeys0.KEY_TOKEN_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<UserEventRecord> KEY_USER_EVENT_PRIMARY = UniqueKeys0.KEY_USER_EVENT_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<ChatRecord> KEY_CHAT_PRIMARY = Internal.createUniqueKey(Chat.CHAT, "KEY_chat_PRIMARY", new TableField[] { Chat.CHAT.ID }, true);
        public static final UniqueKey<ChatMessageRecord> KEY_CHAT_MESSAGE_PRIMARY = Internal.createUniqueKey(ChatMessage.CHAT_MESSAGE, "KEY_chat_message_PRIMARY", new TableField[] { ChatMessage.CHAT_MESSAGE.ID }, true);
        public static final UniqueKey<ExamRecord> KEY_EXAM_PRIMARY = Internal.createUniqueKey(Exam.EXAM, "KEY_exam_PRIMARY", new TableField[] { Exam.EXAM.ID }, true);
        public static final UniqueKey<GradeRecord> KEY_GRADE_PRIMARY = Internal.createUniqueKey(Grade.GRADE, "KEY_grade_PRIMARY", new TableField[] { Grade.GRADE.ID }, true);
        public static final UniqueKey<LessonRecord> KEY_LESSON_PRIMARY = Internal.createUniqueKey(Lesson.LESSON, "KEY_lesson_PRIMARY", new TableField[] { Lesson.LESSON.ID }, true);
        public static final UniqueKey<LessonEventRecord> KEY_LESSON_EVENT_PRIMARY = Internal.createUniqueKey(LessonEvent.LESSON_EVENT, "KEY_lesson_event_PRIMARY", new TableField[] { LessonEvent.LESSON_EVENT.ID }, true);
        public static final UniqueKey<LogRecord> KEY_LOG_PRIMARY = Internal.createUniqueKey(Log.LOG, "KEY_log_PRIMARY", new TableField[] { Log.LOG.ID }, true);
        public static final UniqueKey<RoomRecord> KEY_ROOM_PRIMARY = Internal.createUniqueKey(Room.ROOM, "KEY_room_PRIMARY", new TableField[] { Room.ROOM.ID }, true);
        public static final UniqueKey<SchoolClassRecord> KEY_SCHOOL_CLASS_PRIMARY = Internal.createUniqueKey(SchoolClass.SCHOOL_CLASS, "KEY_school_class_PRIMARY", new TableField[] { SchoolClass.SCHOOL_CLASS.ID }, true);
        public static final UniqueKey<SchoolClassEventRecord> KEY_SCHOOL_CLASS_EVENT_PRIMARY = Internal.createUniqueKey(SchoolClassEvent.SCHOOL_CLASS_EVENT, "KEY_school_class_event_PRIMARY", new TableField[] { SchoolClassEvent.SCHOOL_CLASS_EVENT.ID }, true);
        public static final UniqueKey<SchoolClassSubjectRecord> KEY_SCHOOL_CLASS_SUBJECT_PRIMARY = Internal.createUniqueKey(SchoolClassSubject.SCHOOL_CLASS_SUBJECT, "KEY_school_class_subject_PRIMARY", new TableField[] { SchoolClassSubject.SCHOOL_CLASS_SUBJECT.ID }, true);
        public static final UniqueKey<SchoolEventRecord> KEY_SCHOOL_EVENT_PRIMARY = Internal.createUniqueKey(SchoolEvent.SCHOOL_EVENT, "KEY_school_event_PRIMARY", new TableField[] { SchoolEvent.SCHOOL_EVENT.ID }, true);
        public static final UniqueKey<SchoolInfoRecord> KEY_SCHOOL_INFO_PRIMARY = Internal.createUniqueKey(SchoolInfo.SCHOOL_INFO, "KEY_school_info_PRIMARY", new TableField[] { SchoolInfo.SCHOOL_INFO.ID }, true);
        public static final UniqueKey<SubjectRecord> KEY_SUBJECT_PRIMARY = Internal.createUniqueKey(Subject.SUBJECT, "KEY_subject_PRIMARY", new TableField[] { Subject.SUBJECT.ID }, true);
        public static final UniqueKey<TimetableRecord> KEY_TIMETABLE_PRIMARY = Internal.createUniqueKey(Timetable.TIMETABLE, "KEY_timetable_PRIMARY", new TableField[] { Timetable.TIMETABLE.ID }, true);
        public static final UniqueKey<TokenRecord> KEY_TOKEN_PRIMARY = Internal.createUniqueKey(Token.TOKEN, "KEY_token_PRIMARY", new TableField[] { Token.TOKEN.USER_ID }, true);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, "KEY_user_PRIMARY", new TableField[] { User.USER.ID }, true);
        public static final UniqueKey<UserEventRecord> KEY_USER_EVENT_PRIMARY = Internal.createUniqueKey(UserEvent.USER_EVENT, "KEY_user_event_PRIMARY", new TableField[] { UserEvent.USER_EVENT.ID }, true);
    }
}
