/*
 * This file is generated by jOOQ.
 */
package ch.teachu.teachuapi.generated.tables;


import ch.teachu.teachuapi.generated.Keys;
import ch.teachu.teachuapi.generated.Teachu;
import ch.teachu.teachuapi.generated.tables.records.SchoolClassEventRecord;
import ch.teachu.teachuapi.sql.generation.UuidConverter;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchoolClassEvent extends TableImpl<SchoolClassEventRecord> {

    private static final long serialVersionUID = 299401968;

    /**
     * The reference instance of <code>teachu.school_class_event</code>
     */
    public static final SchoolClassEvent SCHOOL_CLASS_EVENT = new SchoolClassEvent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SchoolClassEventRecord> getRecordType() {
        return SchoolClassEventRecord.class;
    }

    /**
     * The column <code>teachu.school_class_event.id</code>.
     */
    public final TableField<SchoolClassEventRecord, UUID> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BINARY(16).nullable(false), this, "", new UuidConverter());

    /**
     * The column <code>teachu.school_class_event.school_class_id</code>.
     */
    public final TableField<SchoolClassEventRecord, UUID> SCHOOL_CLASS_ID = createField(DSL.name("school_class_id"), org.jooq.impl.SQLDataType.BINARY(16), this, "", new UuidConverter());

    /**
     * The column <code>teachu.school_class_event.title</code>.
     */
    public final TableField<SchoolClassEventRecord, String> TITLE = createField(DSL.name("title"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>teachu.school_class_event.description</code>.
     */
    public final TableField<SchoolClassEventRecord, String> DESCRIPTION = createField(DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>teachu.school_class_event.date</code>.
     */
    public final TableField<SchoolClassEventRecord, LocalDate> DATE = createField(DSL.name("date"), org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>teachu.school_class_event.noSchool</code>.
     */
    public final TableField<SchoolClassEventRecord, Boolean> NOSCHOOL = createField(DSL.name("noSchool"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * Create a <code>teachu.school_class_event</code> table reference
     */
    public SchoolClassEvent() {
        this(DSL.name("school_class_event"), null);
    }

    /**
     * Create an aliased <code>teachu.school_class_event</code> table reference
     */
    public SchoolClassEvent(String alias) {
        this(DSL.name(alias), SCHOOL_CLASS_EVENT);
    }

    /**
     * Create an aliased <code>teachu.school_class_event</code> table reference
     */
    public SchoolClassEvent(Name alias) {
        this(alias, SCHOOL_CLASS_EVENT);
    }

    private SchoolClassEvent(Name alias, Table<SchoolClassEventRecord> aliased) {
        this(alias, aliased, null);
    }

    private SchoolClassEvent(Name alias, Table<SchoolClassEventRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SchoolClassEvent(Table<O> child, ForeignKey<O, SchoolClassEventRecord> key) {
        super(child, key, SCHOOL_CLASS_EVENT);
    }

    @Override
    public Schema getSchema() {
        return Teachu.TEACHU;
    }

    @Override
    public UniqueKey<SchoolClassEventRecord> getPrimaryKey() {
        return Keys.KEY_SCHOOL_CLASS_EVENT_PRIMARY;
    }

    @Override
    public List<UniqueKey<SchoolClassEventRecord>> getKeys() {
        return Arrays.<UniqueKey<SchoolClassEventRecord>>asList(Keys.KEY_SCHOOL_CLASS_EVENT_PRIMARY);
    }

    @Override
    public SchoolClassEvent as(String alias) {
        return new SchoolClassEvent(DSL.name(alias), this);
    }

    @Override
    public SchoolClassEvent as(Name alias) {
        return new SchoolClassEvent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SchoolClassEvent rename(String name) {
        return new SchoolClassEvent(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SchoolClassEvent rename(Name name) {
        return new SchoolClassEvent(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<UUID, UUID, String, String, LocalDate, Boolean> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
