/*
 * This file is generated by jOOQ.
 */
package ch.teachu.teachuapi.generated.tables;


import ch.teachu.teachuapi.generated.Keys;
import ch.teachu.teachuapi.generated.Teachu;
import ch.teachu.teachuapi.generated.tables.records.FileAccessRecord;
import ch.teachu.teachuapi.sql.generation.UuidConverter;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FileAccess extends TableImpl<FileAccessRecord> {

    private static final long serialVersionUID = 1365246846;

    /**
     * The reference instance of <code>teachu.file_access</code>
     */
    public static final FileAccess FILE_ACCESS = new FileAccess();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FileAccessRecord> getRecordType() {
        return FileAccessRecord.class;
    }

    /**
     * The column <code>teachu.file_access.id</code>.
     */
    public final TableField<FileAccessRecord, UUID> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BINARY(16).nullable(false), this, "", new UuidConverter());

    /**
     * The column <code>teachu.file_access.custom_name</code>.
     */
    public final TableField<FileAccessRecord, String> CUSTOM_NAME = createField(DSL.name("custom_name"), org.jooq.impl.SQLDataType.VARCHAR(250), this, "");

    /**
     * The column <code>teachu.file_access.file_name</code>.
     */
    public final TableField<FileAccessRecord, String> FILE_NAME = createField(DSL.name("file_name"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>teachu.file_access.file_type</code>.
     */
    public final TableField<FileAccessRecord, String> FILE_TYPE = createField(DSL.name("file_type"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>teachu.file_access.uploader_id</code>.
     */
    public final TableField<FileAccessRecord, UUID> UPLOADER_ID = createField(DSL.name("uploader_id"), org.jooq.impl.SQLDataType.BINARY(16), this, "", new UuidConverter());

    /**
     * The column <code>teachu.file_access.size</code>.
     */
    public final TableField<FileAccessRecord, Integer> SIZE = createField(DSL.name("size"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>teachu.file_access.upload_date</code>.
     */
    public final TableField<FileAccessRecord, LocalDateTime> UPLOAD_DATE = createField(DSL.name("upload_date"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>teachu.file_access</code> table reference
     */
    public FileAccess() {
        this(DSL.name("file_access"), null);
    }

    /**
     * Create an aliased <code>teachu.file_access</code> table reference
     */
    public FileAccess(String alias) {
        this(DSL.name(alias), FILE_ACCESS);
    }

    /**
     * Create an aliased <code>teachu.file_access</code> table reference
     */
    public FileAccess(Name alias) {
        this(alias, FILE_ACCESS);
    }

    private FileAccess(Name alias, Table<FileAccessRecord> aliased) {
        this(alias, aliased, null);
    }

    private FileAccess(Name alias, Table<FileAccessRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> FileAccess(Table<O> child, ForeignKey<O, FileAccessRecord> key) {
        super(child, key, FILE_ACCESS);
    }

    @Override
    public Schema getSchema() {
        return Teachu.TEACHU;
    }

    @Override
    public UniqueKey<FileAccessRecord> getPrimaryKey() {
        return Keys.KEY_FILE_ACCESS_PRIMARY;
    }

    @Override
    public List<UniqueKey<FileAccessRecord>> getKeys() {
        return Arrays.<UniqueKey<FileAccessRecord>>asList(Keys.KEY_FILE_ACCESS_PRIMARY);
    }

    @Override
    public FileAccess as(String alias) {
        return new FileAccess(DSL.name(alias), this);
    }

    @Override
    public FileAccess as(Name alias) {
        return new FileAccess(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FileAccess rename(String name) {
        return new FileAccess(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FileAccess rename(Name name) {
        return new FileAccess(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, String, String, String, UUID, Integer, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
