/*
 * This file is generated by jOOQ.
 */
package ch.teachu.teachuapi.generated.tables.records;


import ch.teachu.teachuapi.generated.tables.Timetable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TimetableRecord extends UpdatableRecordImpl<TimetableRecord> implements Record4<UUID, Integer, LocalTime, LocalTime> {

    private static final long serialVersionUID = -1172491360;

    /**
     * Setter for <code>teachu.timetable.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>teachu.timetable.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>teachu.timetable.lesson_index</code>.
     */
    public void setLessonIndex(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>teachu.timetable.lesson_index</code>.
     */
    public Integer getLessonIndex() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>teachu.timetable.start_time</code>.
     */
    public void setStartTime(LocalTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>teachu.timetable.start_time</code>.
     */
    public LocalTime getStartTime() {
        return (LocalTime) get(2);
    }

    /**
     * Setter for <code>teachu.timetable.end_time</code>.
     */
    public void setEndTime(LocalTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>teachu.timetable.end_time</code>.
     */
    public LocalTime getEndTime() {
        return (LocalTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, Integer, LocalTime, LocalTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, Integer, LocalTime, LocalTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Timetable.TIMETABLE.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Timetable.TIMETABLE.LESSON_INDEX;
    }

    @Override
    public Field<LocalTime> field3() {
        return Timetable.TIMETABLE.START_TIME;
    }

    @Override
    public Field<LocalTime> field4() {
        return Timetable.TIMETABLE.END_TIME;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getLessonIndex();
    }

    @Override
    public LocalTime component3() {
        return getStartTime();
    }

    @Override
    public LocalTime component4() {
        return getEndTime();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getLessonIndex();
    }

    @Override
    public LocalTime value3() {
        return getStartTime();
    }

    @Override
    public LocalTime value4() {
        return getEndTime();
    }

    @Override
    public TimetableRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public TimetableRecord value2(Integer value) {
        setLessonIndex(value);
        return this;
    }

    @Override
    public TimetableRecord value3(LocalTime value) {
        setStartTime(value);
        return this;
    }

    @Override
    public TimetableRecord value4(LocalTime value) {
        setEndTime(value);
        return this;
    }

    @Override
    public TimetableRecord values(UUID value1, Integer value2, LocalTime value3, LocalTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TimetableRecord
     */
    public TimetableRecord() {
        super(Timetable.TIMETABLE);
    }

    /**
     * Create a detached, initialised TimetableRecord
     */
    public TimetableRecord(UUID id, Integer lessonIndex, LocalTime startTime, LocalTime endTime) {
        super(Timetable.TIMETABLE);

        set(0, id);
        set(1, lessonIndex);
        set(2, startTime);
        set(3, endTime);
    }
}
