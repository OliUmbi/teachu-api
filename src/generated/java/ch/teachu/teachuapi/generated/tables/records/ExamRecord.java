/*
 * This file is generated by jOOQ.
 */
package ch.teachu.teachuapi.generated.tables.records;


import ch.teachu.teachuapi.generated.tables.Exam;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDate;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExamRecord extends UpdatableRecordImpl<ExamRecord> implements Record7<UUID, UUID, String, String, Double, LocalDate, LocalDate> {

    private static final long serialVersionUID = 808501732;

    /**
     * Setter for <code>teachu.exam.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>teachu.exam.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>teachu.exam.school_class_subject_id</code>.
     */
    public void setSchoolClassSubjectId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>teachu.exam.school_class_subject_id</code>.
     */
    public UUID getSchoolClassSubjectId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>teachu.exam.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>teachu.exam.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>teachu.exam.description</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>teachu.exam.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>teachu.exam.weight</code>.
     */
    public void setWeight(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>teachu.exam.weight</code>.
     */
    public Double getWeight() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>teachu.exam.date</code>.
     */
    public void setDate(LocalDate value) {
        set(5, value);
    }

    /**
     * Getter for <code>teachu.exam.date</code>.
     */
    public LocalDate getDate() {
        return (LocalDate) get(5);
    }

    /**
     * Setter for <code>teachu.exam.view_date</code>.
     */
    public void setViewDate(LocalDate value) {
        set(6, value);
    }

    /**
     * Getter for <code>teachu.exam.view_date</code>.
     */
    public LocalDate getViewDate() {
        return (LocalDate) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, UUID, String, String, Double, LocalDate, LocalDate> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, UUID, String, String, Double, LocalDate, LocalDate> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Exam.EXAM.ID;
    }

    @Override
    public Field<UUID> field2() {
        return Exam.EXAM.SCHOOL_CLASS_SUBJECT_ID;
    }

    @Override
    public Field<String> field3() {
        return Exam.EXAM.NAME;
    }

    @Override
    public Field<String> field4() {
        return Exam.EXAM.DESCRIPTION;
    }

    @Override
    public Field<Double> field5() {
        return Exam.EXAM.WEIGHT;
    }

    @Override
    public Field<LocalDate> field6() {
        return Exam.EXAM.DATE;
    }

    @Override
    public Field<LocalDate> field7() {
        return Exam.EXAM.VIEW_DATE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getSchoolClassSubjectId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public Double component5() {
        return getWeight();
    }

    @Override
    public LocalDate component6() {
        return getDate();
    }

    @Override
    public LocalDate component7() {
        return getViewDate();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getSchoolClassSubjectId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public Double value5() {
        return getWeight();
    }

    @Override
    public LocalDate value6() {
        return getDate();
    }

    @Override
    public LocalDate value7() {
        return getViewDate();
    }

    @Override
    public ExamRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public ExamRecord value2(UUID value) {
        setSchoolClassSubjectId(value);
        return this;
    }

    @Override
    public ExamRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public ExamRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ExamRecord value5(Double value) {
        setWeight(value);
        return this;
    }

    @Override
    public ExamRecord value6(LocalDate value) {
        setDate(value);
        return this;
    }

    @Override
    public ExamRecord value7(LocalDate value) {
        setViewDate(value);
        return this;
    }

    @Override
    public ExamRecord values(UUID value1, UUID value2, String value3, String value4, Double value5, LocalDate value6, LocalDate value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExamRecord
     */
    public ExamRecord() {
        super(Exam.EXAM);
    }

    /**
     * Create a detached, initialised ExamRecord
     */
    public ExamRecord(UUID id, UUID schoolClassSubjectId, String name, String description, Double weight, LocalDate date, LocalDate viewDate) {
        super(Exam.EXAM);

        set(0, id);
        set(1, schoolClassSubjectId);
        set(2, name);
        set(3, description);
        set(4, weight);
        set(5, date);
        set(6, viewDate);
    }
}
