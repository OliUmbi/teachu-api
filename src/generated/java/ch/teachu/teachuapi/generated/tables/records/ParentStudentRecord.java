/*
 * This file is generated by jOOQ.
 */
package ch.teachu.teachuapi.generated.tables.records;


import ch.teachu.teachuapi.generated.tables.ParentStudent;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;

import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ParentStudentRecord extends TableRecordImpl<ParentStudentRecord> implements Record2<UUID, UUID> {

    private static final long serialVersionUID = -1418904911;

    /**
     * Setter for <code>teachu.parent_student.parent_id</code>.
     */
    public void setParentId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>teachu.parent_student.parent_id</code>.
     */
    public UUID getParentId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>teachu.parent_student.student_id</code>.
     */
    public void setStudentId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>teachu.parent_student.student_id</code>.
     */
    public UUID getStudentId() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, UUID> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return ParentStudent.PARENT_STUDENT.PARENT_ID;
    }

    @Override
    public Field<UUID> field2() {
        return ParentStudent.PARENT_STUDENT.STUDENT_ID;
    }

    @Override
    public UUID component1() {
        return getParentId();
    }

    @Override
    public UUID component2() {
        return getStudentId();
    }

    @Override
    public UUID value1() {
        return getParentId();
    }

    @Override
    public UUID value2() {
        return getStudentId();
    }

    @Override
    public ParentStudentRecord value1(UUID value) {
        setParentId(value);
        return this;
    }

    @Override
    public ParentStudentRecord value2(UUID value) {
        setStudentId(value);
        return this;
    }

    @Override
    public ParentStudentRecord values(UUID value1, UUID value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ParentStudentRecord
     */
    public ParentStudentRecord() {
        super(ParentStudent.PARENT_STUDENT);
    }

    /**
     * Create a detached, initialised ParentStudentRecord
     */
    public ParentStudentRecord(UUID parentId, UUID studentId) {
        super(ParentStudent.PARENT_STUDENT);

        set(0, parentId);
        set(1, studentId);
    }
}
