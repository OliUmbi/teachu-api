/*
 * This file is generated by jOOQ.
 */
package ch.teachu.teachuapi.generated.tables;


import ch.teachu.teachuapi.generated.Teachu;
import ch.teachu.teachuapi.generated.tables.records.SchoolClassSemesterRecord;
import ch.teachu.teachuapi.sql.generation.UuidConverter;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchoolClassSemester extends TableImpl<SchoolClassSemesterRecord> {

    private static final long serialVersionUID = 728241922;

    /**
     * The reference instance of <code>teachu.school_class_semester</code>
     */
    public static final SchoolClassSemester SCHOOL_CLASS_SEMESTER = new SchoolClassSemester();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SchoolClassSemesterRecord> getRecordType() {
        return SchoolClassSemesterRecord.class;
    }

    /**
     * The column <code>teachu.school_class_semester.school_class_id</code>.
     */
    public final TableField<SchoolClassSemesterRecord, UUID> SCHOOL_CLASS_ID = createField(DSL.name("school_class_id"), org.jooq.impl.SQLDataType.BINARY(16), this, "", new UuidConverter());

    /**
     * The column <code>teachu.school_class_semester.semester_id</code>.
     */
    public final TableField<SchoolClassSemesterRecord, UUID> SEMESTER_ID = createField(DSL.name("semester_id"), org.jooq.impl.SQLDataType.BINARY(16), this, "", new UuidConverter());

    /**
     * Create a <code>teachu.school_class_semester</code> table reference
     */
    public SchoolClassSemester() {
        this(DSL.name("school_class_semester"), null);
    }

    /**
     * Create an aliased <code>teachu.school_class_semester</code> table reference
     */
    public SchoolClassSemester(String alias) {
        this(DSL.name(alias), SCHOOL_CLASS_SEMESTER);
    }

    /**
     * Create an aliased <code>teachu.school_class_semester</code> table reference
     */
    public SchoolClassSemester(Name alias) {
        this(alias, SCHOOL_CLASS_SEMESTER);
    }

    private SchoolClassSemester(Name alias, Table<SchoolClassSemesterRecord> aliased) {
        this(alias, aliased, null);
    }

    private SchoolClassSemester(Name alias, Table<SchoolClassSemesterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SchoolClassSemester(Table<O> child, ForeignKey<O, SchoolClassSemesterRecord> key) {
        super(child, key, SCHOOL_CLASS_SEMESTER);
    }

    @Override
    public Schema getSchema() {
        return Teachu.TEACHU;
    }

    @Override
    public SchoolClassSemester as(String alias) {
        return new SchoolClassSemester(DSL.name(alias), this);
    }

    @Override
    public SchoolClassSemester as(Name alias) {
        return new SchoolClassSemester(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SchoolClassSemester rename(String name) {
        return new SchoolClassSemester(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SchoolClassSemester rename(Name name) {
        return new SchoolClassSemester(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
