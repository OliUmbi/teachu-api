/*
 * This file is generated by jOOQ.
 */
package ch.teachu.teachuapi.generated.tables;


import ch.teachu.teachuapi.enums.ClassSubjectInterval;
import ch.teachu.teachuapi.generated.Keys;
import ch.teachu.teachuapi.generated.Teachu;
import ch.teachu.teachuapi.generated.tables.records.SchoolClassSubjectRecord;
import ch.teachu.teachuapi.sql.generation.ClassSubjectIntervalConverter;
import ch.teachu.teachuapi.sql.generation.UuidConverter;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchoolClassSubject extends TableImpl<SchoolClassSubjectRecord> {

    private static final long serialVersionUID = -1729476663;

    /**
     * The reference instance of <code>teachu.school_class_subject</code>
     */
    public static final SchoolClassSubject SCHOOL_CLASS_SUBJECT = new SchoolClassSubject();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SchoolClassSubjectRecord> getRecordType() {
        return SchoolClassSubjectRecord.class;
    }

    /**
     * The column <code>teachu.school_class_subject.id</code>.
     */
    public final TableField<SchoolClassSubjectRecord, UUID> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BINARY(16).nullable(false), this, "", new UuidConverter());

    /**
     * The column <code>teachu.school_class_subject.school_class_id</code>.
     */
    public final TableField<SchoolClassSubjectRecord, UUID> SCHOOL_CLASS_ID = createField(DSL.name("school_class_id"), org.jooq.impl.SQLDataType.BINARY(16), this, "", new UuidConverter());

    /**
     * The column <code>teachu.school_class_subject.teacher_id</code>.
     */
    public final TableField<SchoolClassSubjectRecord, UUID> TEACHER_ID = createField(DSL.name("teacher_id"), org.jooq.impl.SQLDataType.BINARY(16), this, "", new UuidConverter());

    /**
     * The column <code>teachu.school_class_subject.subject_id</code>.
     */
    public final TableField<SchoolClassSubjectRecord, UUID> SUBJECT_ID = createField(DSL.name("subject_id"), org.jooq.impl.SQLDataType.BINARY(16), this, "", new UuidConverter());

    /**
     * The column <code>teachu.school_class_subject.note</code>.
     */
    public final TableField<SchoolClassSubjectRecord, String> NOTE = createField(DSL.name("note"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>teachu.school_class_subject.start_date</code>.
     */
    public final TableField<SchoolClassSubjectRecord, LocalDate> START_DATE = createField(DSL.name("start_date"), org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>teachu.school_class_subject.end_date</code>.
     */
    public final TableField<SchoolClassSubjectRecord, LocalDate> END_DATE = createField(DSL.name("end_date"), org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>teachu.school_class_subject.interval</code>.
     */
    public final TableField<SchoolClassSubjectRecord, ClassSubjectInterval> INTERVAL = createField(DSL.name("interval"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "", new ClassSubjectIntervalConverter());

    /**
     * The column <code>teachu.school_class_subject.active</code>.
     */
    public final TableField<SchoolClassSubjectRecord, Boolean> ACTIVE = createField(DSL.name("active"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * Create a <code>teachu.school_class_subject</code> table reference
     */
    public SchoolClassSubject() {
        this(DSL.name("school_class_subject"), null);
    }

    /**
     * Create an aliased <code>teachu.school_class_subject</code> table reference
     */
    public SchoolClassSubject(String alias) {
        this(DSL.name(alias), SCHOOL_CLASS_SUBJECT);
    }

    /**
     * Create an aliased <code>teachu.school_class_subject</code> table reference
     */
    public SchoolClassSubject(Name alias) {
        this(alias, SCHOOL_CLASS_SUBJECT);
    }

    private SchoolClassSubject(Name alias, Table<SchoolClassSubjectRecord> aliased) {
        this(alias, aliased, null);
    }

    private SchoolClassSubject(Name alias, Table<SchoolClassSubjectRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SchoolClassSubject(Table<O> child, ForeignKey<O, SchoolClassSubjectRecord> key) {
        super(child, key, SCHOOL_CLASS_SUBJECT);
    }

    @Override
    public Schema getSchema() {
        return Teachu.TEACHU;
    }

    @Override
    public UniqueKey<SchoolClassSubjectRecord> getPrimaryKey() {
        return Keys.KEY_SCHOOL_CLASS_SUBJECT_PRIMARY;
    }

    @Override
    public List<UniqueKey<SchoolClassSubjectRecord>> getKeys() {
        return Arrays.<UniqueKey<SchoolClassSubjectRecord>>asList(Keys.KEY_SCHOOL_CLASS_SUBJECT_PRIMARY);
    }

    @Override
    public SchoolClassSubject as(String alias) {
        return new SchoolClassSubject(DSL.name(alias), this);
    }

    @Override
    public SchoolClassSubject as(Name alias) {
        return new SchoolClassSubject(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SchoolClassSubject rename(String name) {
        return new SchoolClassSubject(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SchoolClassSubject rename(Name name) {
        return new SchoolClassSubject(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<UUID, UUID, UUID, UUID, String, LocalDate, LocalDate, ClassSubjectInterval, Boolean> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
