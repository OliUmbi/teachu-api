/*
 * This file is generated by jOOQ.
 */
package ch.teachu.teachuapi.generated.tables;


import ch.teachu.teachuapi.generated.Teachu;
import ch.teachu.teachuapi.generated.tables.records.SchoolConfigRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchoolConfig extends TableImpl<SchoolConfigRecord> {

    private static final long serialVersionUID = 2114761033;

    /**
     * The reference instance of <code>teachu.school_config</code>
     */
    public static final SchoolConfig SCHOOL_CONFIG = new SchoolConfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SchoolConfigRecord> getRecordType() {
        return SchoolConfigRecord.class;
    }

    /**
     * The column <code>teachu.school_config.name</code>.
     */
    public final TableField<SchoolConfigRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(250), this, "");

    /**
     * The column <code>teachu.school_config.value</code>.
     */
    public final TableField<SchoolConfigRecord, String> VALUE = createField(DSL.name("value"), org.jooq.impl.SQLDataType.VARCHAR(250), this, "");

    /**
     * The column <code>teachu.school_config.code_type</code>.
     */
    public final TableField<SchoolConfigRecord, String> CODE_TYPE = createField(DSL.name("code_type"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>teachu.school_config</code> table reference
     */
    public SchoolConfig() {
        this(DSL.name("school_config"), null);
    }

    /**
     * Create an aliased <code>teachu.school_config</code> table reference
     */
    public SchoolConfig(String alias) {
        this(DSL.name(alias), SCHOOL_CONFIG);
    }

    /**
     * Create an aliased <code>teachu.school_config</code> table reference
     */
    public SchoolConfig(Name alias) {
        this(alias, SCHOOL_CONFIG);
    }

    private SchoolConfig(Name alias, Table<SchoolConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private SchoolConfig(Name alias, Table<SchoolConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SchoolConfig(Table<O> child, ForeignKey<O, SchoolConfigRecord> key) {
        super(child, key, SCHOOL_CONFIG);
    }

    @Override
    public Schema getSchema() {
        return Teachu.TEACHU;
    }

    @Override
    public SchoolConfig as(String alias) {
        return new SchoolConfig(DSL.name(alias), this);
    }

    @Override
    public SchoolConfig as(Name alias) {
        return new SchoolConfig(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SchoolConfig rename(String name) {
        return new SchoolConfig(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SchoolConfig rename(Name name) {
        return new SchoolConfig(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
