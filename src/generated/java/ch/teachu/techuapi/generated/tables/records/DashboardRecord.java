/*
 * This file is generated by jOOQ.
 */
package ch.teachu.techuapi.generated.tables.records;


import ch.teachu.techuapi.generated.tables.Dashboard;

import java.time.LocalDate;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DashboardRecord extends UpdatableRecordImpl<DashboardRecord> implements Record9<UUID, String, String, LocalDate, String, UUID, String, Byte, Byte> {

    private static final long serialVersionUID = 53558026;

    /**
     * Setter for <code>teachu.dashboard.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>teachu.dashboard.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>teachu.dashboard.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>teachu.dashboard.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>teachu.dashboard.message</code>.
     */
    public void setMessage(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>teachu.dashboard.message</code>.
     */
    public String getMessage() {
        return (String) get(2);
    }

    /**
     * Setter for <code>teachu.dashboard.date</code>.
     */
    public void setDate(LocalDate value) {
        set(3, value);
    }

    /**
     * Getter for <code>teachu.dashboard.date</code>.
     */
    public LocalDate getDate() {
        return (LocalDate) get(3);
    }

    /**
     * Setter for <code>teachu.dashboard.img</code>.
     */
    public void setImg(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>teachu.dashboard.img</code>.
     */
    public String getImg() {
        return (String) get(4);
    }

    /**
     * Setter for <code>teachu.dashboard.user_id</code>.
     */
    public void setUserId(UUID value) {
        set(5, value);
    }

    /**
     * Getter for <code>teachu.dashboard.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(5);
    }

    /**
     * Setter for <code>teachu.dashboard.state</code>.
     */
    public void setState(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>teachu.dashboard.state</code>.
     */
    public String getState() {
        return (String) get(6);
    }

    /**
     * Setter for <code>teachu.dashboard.important</code>.
     */
    public void setImportant(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>teachu.dashboard.important</code>.
     */
    public Byte getImportant() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>teachu.dashboard.pinned</code>.
     */
    public void setPinned(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>teachu.dashboard.pinned</code>.
     */
    public Byte getPinned() {
        return (Byte) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<UUID, String, String, LocalDate, String, UUID, String, Byte, Byte> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<UUID, String, String, LocalDate, String, UUID, String, Byte, Byte> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Dashboard.DASHBOARD.ID;
    }

    @Override
    public Field<String> field2() {
        return Dashboard.DASHBOARD.TITLE;
    }

    @Override
    public Field<String> field3() {
        return Dashboard.DASHBOARD.MESSAGE;
    }

    @Override
    public Field<LocalDate> field4() {
        return Dashboard.DASHBOARD.DATE;
    }

    @Override
    public Field<String> field5() {
        return Dashboard.DASHBOARD.IMG;
    }

    @Override
    public Field<UUID> field6() {
        return Dashboard.DASHBOARD.USER_ID;
    }

    @Override
    public Field<String> field7() {
        return Dashboard.DASHBOARD.STATE;
    }

    @Override
    public Field<Byte> field8() {
        return Dashboard.DASHBOARD.IMPORTANT;
    }

    @Override
    public Field<Byte> field9() {
        return Dashboard.DASHBOARD.PINNED;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getMessage();
    }

    @Override
    public LocalDate component4() {
        return getDate();
    }

    @Override
    public String component5() {
        return getImg();
    }

    @Override
    public UUID component6() {
        return getUserId();
    }

    @Override
    public String component7() {
        return getState();
    }

    @Override
    public Byte component8() {
        return getImportant();
    }

    @Override
    public Byte component9() {
        return getPinned();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getMessage();
    }

    @Override
    public LocalDate value4() {
        return getDate();
    }

    @Override
    public String value5() {
        return getImg();
    }

    @Override
    public UUID value6() {
        return getUserId();
    }

    @Override
    public String value7() {
        return getState();
    }

    @Override
    public Byte value8() {
        return getImportant();
    }

    @Override
    public Byte value9() {
        return getPinned();
    }

    @Override
    public DashboardRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public DashboardRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public DashboardRecord value3(String value) {
        setMessage(value);
        return this;
    }

    @Override
    public DashboardRecord value4(LocalDate value) {
        setDate(value);
        return this;
    }

    @Override
    public DashboardRecord value5(String value) {
        setImg(value);
        return this;
    }

    @Override
    public DashboardRecord value6(UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    public DashboardRecord value7(String value) {
        setState(value);
        return this;
    }

    @Override
    public DashboardRecord value8(Byte value) {
        setImportant(value);
        return this;
    }

    @Override
    public DashboardRecord value9(Byte value) {
        setPinned(value);
        return this;
    }

    @Override
    public DashboardRecord values(UUID value1, String value2, String value3, LocalDate value4, String value5, UUID value6, String value7, Byte value8, Byte value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DashboardRecord
     */
    public DashboardRecord() {
        super(Dashboard.DASHBOARD);
    }

    /**
     * Create a detached, initialised DashboardRecord
     */
    public DashboardRecord(UUID id, String title, String message, LocalDate date, String img, UUID userId, String state, Byte important, Byte pinned) {
        super(Dashboard.DASHBOARD);

        set(0, id);
        set(1, title);
        set(2, message);
        set(3, date);
        set(4, img);
        set(5, userId);
        set(6, state);
        set(7, important);
        set(8, pinned);
    }
}
