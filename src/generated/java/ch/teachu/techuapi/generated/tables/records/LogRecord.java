/*
 * This file is generated by jOOQ.
 */
package ch.teachu.techuapi.generated.tables.records;


import ch.teachu.techuapi.generated.tables.Log;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogRecord extends UpdatableRecordImpl<LogRecord> implements Record5<UUID, String, String, String, LocalDateTime> {

    private static final long serialVersionUID = -797967408;

    /**
     * Setter for <code>teachu.log.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>teachu.log.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>teachu.log.message</code>.
     */
    public void setMessage(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>teachu.log.message</code>.
     */
    public String getMessage() {
        return (String) get(1);
    }

    /**
     * Setter for <code>teachu.log.origin</code>.
     */
    public void setOrigin(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>teachu.log.origin</code>.
     */
    public String getOrigin() {
        return (String) get(2);
    }

    /**
     * Setter for <code>teachu.log.level</code>.
     */
    public void setLevel(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>teachu.log.level</code>.
     */
    public String getLevel() {
        return (String) get(3);
    }

    /**
     * Setter for <code>teachu.log.timestamp</code>.
     */
    public void setTimestamp(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>teachu.log.timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, String, String, String, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, String, String, String, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Log.LOG.ID;
    }

    @Override
    public Field<String> field2() {
        return Log.LOG.MESSAGE;
    }

    @Override
    public Field<String> field3() {
        return Log.LOG.ORIGIN;
    }

    @Override
    public Field<String> field4() {
        return Log.LOG.LEVEL;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Log.LOG.TIMESTAMP;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getMessage();
    }

    @Override
    public String component3() {
        return getOrigin();
    }

    @Override
    public String component4() {
        return getLevel();
    }

    @Override
    public LocalDateTime component5() {
        return getTimestamp();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getMessage();
    }

    @Override
    public String value3() {
        return getOrigin();
    }

    @Override
    public String value4() {
        return getLevel();
    }

    @Override
    public LocalDateTime value5() {
        return getTimestamp();
    }

    @Override
    public LogRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public LogRecord value2(String value) {
        setMessage(value);
        return this;
    }

    @Override
    public LogRecord value3(String value) {
        setOrigin(value);
        return this;
    }

    @Override
    public LogRecord value4(String value) {
        setLevel(value);
        return this;
    }

    @Override
    public LogRecord value5(LocalDateTime value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public LogRecord values(UUID value1, String value2, String value3, String value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LogRecord
     */
    public LogRecord() {
        super(Log.LOG);
    }

    /**
     * Create a detached, initialised LogRecord
     */
    public LogRecord(UUID id, String message, String origin, String level, LocalDateTime timestamp) {
        super(Log.LOG);

        set(0, id);
        set(1, message);
        set(2, origin);
        set(3, level);
        set(4, timestamp);
    }
}
